#!/usr/bin/env bash
set -ex

cd $(dirname $0)/..

source ./scripts/version.sh
export DOCKER_CLI_EXPERIMENTAL=enabled

docker manifest create \
    ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} \
    ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-linux-amd64 \
    ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-linux-arm64 \
    ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-windows-amd64
    
docker manifest annotate ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-linux-amd64 --os linux --arch amd64
docker manifest annotate ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-linux-arm64 --os linux --arch arm64
docker manifest annotate ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}-windows-amd64 --os windows --arch amd64

docker manifest push ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION}

if [ -n "${IID_FILE_FLAG}" ]; then
    DIGEST=$(docker buildx imagetools inspect --format "{{json .Manifest}}" ${REPO}/${PROG}-runtime:${DOCKERIZED_VERSION} | jq -r '.digest')
    IID_FILE_PATH=$(echo "${IID_FILE_FLAG}" | cut -d' ' -f2)
    echo "${DIGEST}" > "${IID_FILE_PATH}"
fi
